# Weevely testsuite configuration

# To get started with the testsuite, rename this file to config.py.
# Then, create a dedicated folder in your web environments and set
# permissions in order to give total write, read and execute
# permissions to the web user.
#
# Then set the `script_folder` variable to the dedicated folder path
# and set the `script_folder_url` variable to the corresponding URL
# exposed through the web service.
#
# Example:
# $ sudo mkdir /var/www/environment
# $ sudo chown www-data:www-data /var/www/environment
#
script_folder = '/var/www/environment/'
script_folder_url = 'http://localhost/environment/'
#
# If your web server is properly exposing the `script_folder_url`,
# executing the command `python -m unittest discover` from the
# weevely root folder should give the following output.
#
# $ python -m unittest discover
# ...garbage...
# ----------------------------------------------------------------------
# Ran 31 tests in 26.780s
# OK (skipped=4)
# $

#
# The following cmd_env_* commands are used to setup the
# test environments. Feel free to modify with ssh or other commands
# to setup remote environments.
#
cmd_env_move_s_s = 'mv %s %s'
cmd_env_chmod_s_s = 'chmod %s %s'
cmd_env_mkdir_s = 'mkdir %s'
cmd_env_rmdir_s = 'rmdir %s'
cmd_env_remove_s = 'rm -f %s'
cmd_env_content_s_to_s = 'echo -ne "%s" > %s'
cmd_env_stat_permissions_s = 'stat -c %%a "%s"'
cmd_env_stat_time_modif_epoch_s = 'stat -c %%Y "%s"'
cmd_env_gzip_s = 'gzip "%s"'
cmd_env_gunzip_s = 'gunzip "%s"'
cmd_env_print_repr_s = """python -c 'import sys;sys.stdout.write(repr(open("%s","rb").read()).strip()[1:-1])'"""
cmd_env_bzip2_s = 'bzip2 "%s"'
cmd_env_bunzip2_s = 'bunzip2 "%s"'
cmd_env_cd_s_zip_s_s = 'cd "%s" && zip -r "%s" "%s"'
cmd_env_cd_s_tar_s_s = 'cd "%s" && tar pcf "%s" "%s"'
cmd_env_unzip_s = 'unzip "%s"'
cmd_env_curl_s = 'curl -s "%s"'
cmd_env_cat_s = 'cat "%s"'

# These are the permissions required in `script_folder`, validated by
# the testsuite. If change please keep in mind that the user running
# the web server require complete rwx access to the folder.
script_folder_expected_perms = '0777'

# Set to True to enable debug prints
debug = False

# This option stress the communication protocol with a big number of
# request.
test_stress_channels = False

#
# SQL testing options
#
# Dbms
sql_dbms = 'mysql'
# Test db
sql_db = 'test'
# Credentials
sql_user = ''
sql_passwd = ''
# Set if automatically connect if e.g. mysql default login is set
sql_autologin = False


#
# Module net_curl options
#
# List of vectors to skip. Default contains 'php_httprequest1' because
# class HttpRequest provided by the version 1 of the pecl_http PECL
# extension is hardly remotely installed.
curl_skip_vectors = [ 'php_httprequest1' ]

# Module shell_su options
#
# DO NOT WRITE YOUR PASSWORDS in plaintext files and skip this test.
# This test requires pexpect and python-pexpect packages to be installed.
su_user = ''
su_passwd = ''
